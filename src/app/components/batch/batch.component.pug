ct-section
    ct-section-header
        ct-section-header-row
            ct-flex(justify-content="space-between" align-items="center")
                ct-flex-item
                    ct-heading Batch
                ct-flex-item
                    button(mat-flat-button color="primary" '[disabled]'="currentStates.has(states.loading) || currentStates.has(states.firstLoading)" routerLink="/launchpad/batch/add") {{ 'batch.Upload files and start processing' | translate }}

    ct-section-body
        ct-section-body-row 
            ct-table(#table)
                table(mat-table '[dataSource]'="dataSource" class="mat-table") 
                    ng-container(matColumnDef="id") 
                        th(mat-header-cell *matHeaderCellDef) {{ 'batch.Id' | translate }}
                        td(mat-cell *matCellDef="let el") {{el.batch.id}} 
                    ng-container(matColumnDef="createdOn") 
                        th(mat-header-cell *matHeaderCellDef) {{ 'batch.Created On' | translate }}
                        td(mat-cell *matCellDef="let el") {{el.batch.createdOn | date:'MMM d, yyyy, HH:mm:ss'}} 
                    ng-container(matColumnDef="isBatchConsistent") 
                        th(mat-header-cell *matHeaderCellDef) {{ 'batch.Is Batch Consistent?' | translate }} 
                        td(mat-cell *matCellDef="let el") {{el.ok}} 
                    ng-container(matColumnDef="planCode") 
                        th(mat-header-cell *matHeaderCellDef) {{ 'batch.Plan Code' | translate }}
                        td(mat-cell *matCellDef="let el") {{el.planCode}} 
                    ng-container(matColumnDef="execState") 
                        th(mat-header-cell *matHeaderCellDef)  {{ 'batch.Exec State' | translate }}
                        td(mat-cell *matCellDef="let el") {{el.execStateStr}} 
                    ng-container(matColumnDef="bts") 
                        th(mat-header-cell '*matHeaderCellDef')  
                        td(mat-cell *matCellDef="let el") 
                            ct-flex(justify-content="flex-end" gap="4px")
                                ct-flex-item: button(mat-flat-button size="forTableRow" '[routerLink]'="['/launchpad/batch',el.batch.id,'status']"
                                color="primary")  {{ 'batch.Status' | translate }}
                                // TODO download file
                                ct-flex-item
                                    button(mat-flat-button size="forTableRow" color="primary" '(click)'="downloadFileSystem(el.batch.id)")  {{ 'batch.Download Result' | translate }}
                                ct-flex-item: button(mat-flat-button color="warn" size="forTableRow" '(click)'="delete(el)" title="Delete"): mat-icon delete
                    tr(mat-header-row *matHeaderRowDef="columnsToDisplay")  
                    tr(mat-row *matRowDef="let row; columns: columnsToDisplay;" '[class.deleted-table-row]'="deletedRows.includes(row)")

        ct-section-body-row(*ngIf="currentStates.has(states.firstLoading)")
            mat-progress-bar(mode="indeterminate")

    ct-section-footer
        ct-section-footer-row
            ct-flex(justify-content="space-between")
                ct-flex-item
                    ct-flex(justify-content="flex-start" gap="8px")
                        ct-flex-item: button(mat-flat-button color="primary" #prevTable '(click)'='prev()' disabled): mat-icon arrow_back_ios
                        ct-flex-item: button(mat-flat-button color="primary" #nextTable '(click)'='next()' disabled): mat-icon arrow_forward_ios
                ct-flex-item
                    button(mat-flat-button color="primary" '[disabled]'="currentStates.has(states.loading) || currentStates.has(states.firstLoading)" routerLink="/launchpad/batch/add")  {{ 'batch.Upload files and start processing' | translate }}
